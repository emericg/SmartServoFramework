language: cpp
dist: xenial
osx_image: xcode11

os:
  - linux
  - osx

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-add-repository ppa:beineri/opt-qt-5.15.2-xenial -y;
      sudo apt-get update -q;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update;
    fi

install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get install qt515base qt515svg qt515imageformats qt515tools qt515serialport -y;
      sudo apt-get install libgl1-mesa-dev -y;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew install qt;
    fi

before_script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then source /opt/qt515/bin/qt515-env.sh; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export PATH=$PATH:/usr/local/opt/qt5/bin:/usr/local/bin; fi
  - qmake --version
  - cd SmartServoGui/
  - qmake CONFIG+=release PREFIX=/usr

script:
  - |-
  - make -j$(nproc)
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      make INSTALL_ROOT=appdir -j$(nproc) install; find appdir/;
      wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/6/linuxdeployqt-7-x86_64.AppImage";
      chmod a+x linuxdeployqt-7-x86_64.AppImage;
      unset QTDIR; unset QT_PLUGIN_PATH; unset LD_LIBRARY_PATH;
      export VERSION=$(git rev-parse --short HEAD);
      mkdir -p appdir/usr/plugins/imageformats/ appdir/usr/plugins/iconengines/;
      cp /opt/qt515/plugins/imageformats/libqsvg.so appdir/usr/plugins/imageformats/;
      cp /opt/qt515/plugins/iconengines/libqsvgicon.so appdir/usr/plugins/iconengines/;
      ./linuxdeployqt-7-x86_64.AppImage appdir/usr/share/applications/*.desktop -unsupported-allow-new-glibc -bundle-non-qt-libs -extra-plugins=imageformats/libqsvg.so,iconengines/libqsvgicon.so;
      ./linuxdeployqt-7-x86_64.AppImage appdir/usr/share/applications/*.desktop -unsupported-allow-new-glibc -appimage;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      make install;
    fi

after_success:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      find appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq;
      curl --upload-file SmartServoGui*.AppImage https://transfer.sh/SmartServoGui-git.$(git rev-parse --short HEAD)-linux64.AppImage;
      echo '>> Uploading to transfer.sh completed';
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      cd bin/;
      zip -r -X SmartServoGui.zip SmartServoGui.app;
      curl --upload-file SmartServoGui*.zip https://transfer.sh/SmartServoGui-git.$(git rev-parse --short HEAD)-macOS.zip;
      echo '>> Uploading to transfer.sh completed';
    fi
    - echo '>> End of CI build script!';
